<div id="app1">
    <div class="text-h5 text-weight-bold text-white q-pa-lg" style="background-color: #ff3333; color: rgb(230, 229, 229); text-color: white;
            border-top-left-radius: 10px; /* Adjust the radius as needed */
            border-top-right-radius: 10px; /* Adjust the radius as needed */">
        Delivery Information
    </div>


    <q-table class="bg-grey-2" title="Delivery Information" :rows="deliveryBranches" :columns="columns"
        :filter="searchText">

        <template v-slot:top-left>
            <div class="text-h6 q-pa-md">Delivery Details</div>
            <q-separator vertical class="q-my-sm"></q-separator>
            <div class="q-pl-sm">
                <q-input debounce="200" dense v-model="searchText" type="text">
                    <template v-slot:prepend>
                        <q-icon name="search"></q-icon>
                    </template>
                </q-input>
            </div>
        </template>

        <template v-slot:body="props">
            <q-tr :props="props">
                <q-td key="actions" :props="props">
                    <q-btn class="q-ma-sm q-px-lg q-py-sm" color="red-6" @@click="confirm = true" icon="delete_forever"
                        size="15px"></q-btn>
                    <q-dialog v-model="confirm" persistent>
                        <q-card>
                            <q-card-section class="row items-center">
                                <q-avatar icon="place" color="red" text-color="white"></q-avatar>
                                <span class="q-ml-sm">Are you sure you want to delete this delivery location?</span>
                            </q-card-section>

                            <q-card-actions align="center">
                                <q-btn class="q-ma-sm" color="red-6" @@click="deleteDeliveryBranch(props.row)"
                                    label="Yes" v-close-popup></q-btn>
                                <q-btn class="q-ma-sm" label="No" color="grey" v-close-popup />
                            </q-card-actions>
                        </q-card>
                    </q-dialog>
                </q-td>
                <q-td key="index" :props="props">{{ deliveryBranches.indexOf(props.row) + 1 }}</q-td>
                <q-td key="deliveryCompanyName" :props="props">
                    {{ props.row.deliveryService ? props.row.deliveryService.deliveryCompanyName : '' }}
                    <q-popup-edit v-model="props.row.deliveryService.deliveryCompanyName">
                        <q-input v-model="props.row.deliveryService.deliveryCompanyName" dense autofocus
                            counter></q-input>
                        <div class="justify-end row">
                            <q-btn color="blue-grey-6" @@click="editDeliveryBranch(props.row)" icon="edit" label="edit"
                                v-close-popup="cancelEnabled">
                            </q-btn>
                        </div>
                    </q-popup-edit>
                </q-td>
                <q-td key="branchName" :props="props">
                    {{ props.row.branchName }}
                    <q-popup-edit v-model="props.row.branchName">
                        <q-input v-model="props.row.branchName" dense autofocus counter></q-input>
                        <div class="justify-end row">
                            <q-btn color="blue-grey-6" @@click="editDeliveryBranch(props.row)" icon="edit" label="edit"
                                v-close-popup="cancelEnabled">
                            </q-btn>
                        </div>
                    </q-popup-edit>
                </q-td>
                <q-td key="telNumber" :props="props">
                    {{ props.row.branchTelNumbers && props.row.branchTelNumbers.length > 0 ?
                    props.row.branchTelNumbers[0].telNumber : '' }}
                    <q-popup-edit v-model="props.row.branchTelNumbers[0].telNumber">
                        <q-input v-model="props.row.branchTelNumbers[0].telNumber" dense autofocus counter></q-input>
                        <div class="justify-end row">
                            <q-btn color="blue-grey-6" @@click="editDeliveryBranch(props.row)" icon="edit" label="edit"
                                v-close-popup="cancelEnabled">
                            </q-btn>
                        </div>
                    </q-popup-edit>
                </q-td>
                <q-td key="branchAvailability" :props="props">
                    {{ props.row.branchAvailability }}
                    <q-popup-edit v-model="props.row.branchAvailability">
                        <q-input v-model="props.row.branchAvailability" dense autofocus counter></q-input>
                        <div class="justify-end row">
                            <q-btn color="blue-grey-6" @@click="editDeliveryBranch(props.row)" icon="edit" label="edit"
                                v-close-popup="cancelEnabled">
                            </q-btn>
                        </div>
                    </q-popup-edit>
                </q-td>
                <q-td key="branchAddress" :props="props">
                    {{ props.row.branchAddress ? props.row.branchAddress.province : '' }}
                    <q-popup-edit v-model="props.row.branchAddress.province">
                        <q-input v-model="props.row.branchAddress.province" dense autofocus counter></q-input>
                        <div class="justify-end row">
                            <q-btn color="blue-grey-6" @@click="editDeliveryBranch(props.row)" icon="edit" label="edit"
                                v-close-popup="cancelEnabled">
                            </q-btn>
                        </div>
                    </q-popup-edit>
                </q-td>
                <q-td key="branchAddress" :props="props">
                    {{ props.row.branchAddress ? props.row.branchAddress.city : '' }}
                    <q-popup-edit v-model="props.row.branchAddress.city">
                        <q-input v-model="props.row.branchAddress.city" dense autofocus counter></q-input>
                        <div class="justify-end row">
                            <q-btn color="blue-grey-6" @@click="editDeliveryBranch(props.row)" icon="edit" label="edit"
                                v-close-popup="cancelEnabled">
                            </q-btn>
                        </div>
                    </q-popup-edit>
                </q-td>
                <q-td key="branchAddress" :props="props">
                    {{ props.row.branchAddress ? props.row.branchAddress.village : '' }}
                    <q-popup-edit v-model="props.row.branchAddress.village">
                        <q-input v-model="props.row.branchAddress.village" dense autofocus counter></q-input>
                        <div class="justify-end row">
                            <q-btn color="blue-grey-6" @@click="editDeliveryBranch(props.row)" icon="edit" label="edit"
                                v-close-popup="cancelEnabled">
                            </q-btn>
                        </div>
                    </q-popup-edit>
                </q-td>
                <q-td key="branchAddress" :props="props">
                    {{ props.row.branchAddress ? props.row.branchAddress.addressDetail : '' }}
                    <q-popup-edit v-model="props.row.branchAddress.addressDetail">
                        <q-input v-model="props.row.branchAddress.addressDetail" dense autofocus counter></q-input>
                        <div class="justify-end row">
                            <q-btn color="blue-grey-6" @@click="editDeliveryBranch(props.row)" icon="edit" label="edit"
                                v-close-popup="cancelEnabled">
                            </q-btn>
                        </div>
                    </q-popup-edit>
                </q-td>
                <q-td key="branchGooglemapPosition" :props="props">
                    {{ props.row.branchGooglemapPosition }}
                    <q-popup-edit v-model="props.row.branchGooglemapPosition">
                        <q-input v-model="props.row.branchGooglemapPosition" dense autofocus counter></q-input>
                        <div class="justify-end row">
                            <q-btn color="blue-grey-6" @@click="editDeliveryBranch(props.row)" icon="edit" label="edit"
                                v-close-popup="cancelEnabled">
                            </q-btn>
                        </div>
                    </q-popup-edit>
                </q-td>
            </q-tr>
        </template>

    </q-table>

    <div class="bg-grey-9 q-pa-sm" style="border-bottom-left-radius: 10px; border-bottom-right-radius: 10px;"></div>

    <q-btn class="q-my-md q-py-md float-right" style="margin-bottom: 50px;" color="green" icon="add_box" label="Add Delivery Location" size="md" 
        onclick='window.location="/Supplier/AddSup"'></q-btn>
</div>

@section code {
    <script>
        var option = {
            //data
            data() {
                return {
                    confirm: false,
                    searchText: "",
                    deliveryBranches: []
                    ,
                    columns: [
                        {
                            name: 'actions',
                            label: 'Actions',
                            field: 'actions',
                            align: 'center'
                        },
                        {
                            name: 'index',
                            field: 'index',
                            align: 'left',
                            sortable: true,
                            label: 'No'
                        },
                        {
                            name: 'deliveryCompanyName',
                            label: 'Delivery Service',
                            field: 'deliveryService.deliveryCompanyName',
                            sortable: true,
                            align: 'center'
                        },
                        {
                            name: 'branchName',
                            label: 'Branch Name',
                            field: 'branchName',
                            sortable: true,
                            align: 'center'
                        },
                        {
                            name: 'telNumber',
                            label: 'Branch Tel Numbers',
                            field: 'branchTelNumbers[0].telNumber', // Assuming you want the first telNumber
                            sortable: true,
                            align: 'center'
                        },
                        {
                            name: 'branchAvailability',
                            label: 'Branch Availability',
                            field: 'branchAvailability',
                            sortable: true,
                            align: 'center'
                        },
                        {
                            name: 'branchAddress',
                            label: 'Branch Address',
                            field: 'branchAddress.province', // Adjust as needed
                            sortable: true,
                            align: 'center'
                        },
                        {
                            name: 'branchAddress',
                            label: 'Branch Address',
                            field: 'branchAddress.city', // Adjust as needed
                            sortable: true,
                            align: 'center'
                        },
                        {
                            name: 'branchAddress',
                            label: 'Branch Address',
                            field: 'branchAddress.village', // Adjust as needed
                            sortable: true,
                            align: 'center'
                        },
                        {
                            name: 'branchAddress',
                            label: 'Branch Address',
                            field: 'branchAddress.addressDetail', // Adjust as needed
                            sortable: true,
                            align: 'center'
                        },
                        {
                            name: 'branchGooglemapPosition',
                            label: 'Branch Googlemap Position',
                            field: 'branchGooglemapPosition',
                            sortable: true,
                            align: 'center'
                        }
                    ]
                };
            }
            ,
            //methods
            methods: {
                async editDeliveryBranch(item) {

                    var url = "api/EditDeliveryBranch";
                    try {
                        console.log(item);
                        var result = await axios.post(url, item);
                        console.log(result.data);
                    }
                    catch (error) {
                        console.log(error);
                    }

                },//ef
                async deleteDeliveryBranch(item) {
                    console.log(item);
                    var url = "/api/DeleteDeliveryBranch";
                    var del = item;

                    try {
                        // Send the delete request
                        await axios.post(url, del);

                        // Use the correct property name in the filter callback
                        this.deliveryBranches = this.deliveryBranches.filter(x => x.DeliveryBranchId !== item.DeliveryBranchId);

                        // Set a flag in local storage indicating successful delete
                        localStorage.setItem('deleteSuccess', 'true');

                        // Refresh the page
                        window.location.reload();
                    } catch (error) {
                        console.error('Error deleting delivery branch:', error);

                        // Notify the user about the error
                        this.$q.notify({
                            type: 'negative',
                            color: 'red-8',
                            message: 'Error deleting delivery branch'
                        });
                    }
                }



                ,
            }
            ,
            //computed
            computed: {

            }
            ,
            //created
            async created() {
                try {
                    var response = await axios.get("/api/GetDeliveryBranches"); // Updated API endpoint
                    this.deliveryBranches = response.data;
                } catch (error) {
                    console.log(error);
                }
                // Check if deleteSuccess flag is set
                const deleteSuccess = localStorage.getItem('deleteSuccess');
                if (deleteSuccess === 'true') {
                    // Notify the user about successful delete
                    this.$q.notify({
                        type: 'negative',
                        color: 'red-8',
                        message: 'Delivery branch has been deleted'
                    });

                    // Clear the flag to avoid showing the notify on subsequent page loads
                    localStorage.removeItem('deleteSuccess');
                }
            }

            ,
            //mounted
            mounted() {

            }

        };

        const app = Vue.createApp(option);
        app.use(Quasar)
        app.mount('#app1')
    </script>
}