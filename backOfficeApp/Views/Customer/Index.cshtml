<div id="app1">

    <div class="text-h5 text-weight-bold text-white q-pa-lg" style="background-color: #ff3333; color: rgb(230, 229, 229); text-color: white;
            border-top-left-radius: 10px; /* Adjust the radius as needed */
            border-top-right-radius: 10px; /* Adjust the radius as needed */">
        Customer Information</div>


    <q-table class="bg-grey-2" title="Personal Information" :rows="customers" :columns="columns" :filter="searchText">

        <template v-slot:top-left>
            <div class="text-h6 q-pa-md">Personal Information</div>
            <q-separator vertical class="q-my-sm"></q-separator>
            <div class="q-pl-sm">
                <q-input debounce="200" dense v-model="searchText" type="text">
                    <template v-slot:prepend>
                        <q-icon name="search"></q-icon>
                    </template>
                </q-input>
            </div>
        </template>
        <template v-slot:body="props">
            <q-tr :props="props">
                <q-td key="actions" :props="props">
                    <q-btn class="q-ma-sm q-px-lg q-py-sm" color="red-6" @@click="confirm = true" icon="delete_forever"
                        size="15px"></q-btn>
                    <q-dialog v-model="confirm" persistent>
                        <q-card>
                            <q-card-section class="row items-center">
                                <q-avatar icon="person_remove" color="orange" text-color="white"></q-avatar>
                                <span class="q-ml-sm">Are you sure you want to delete this customer?</span>
                            </q-card-section>

                            <q-card-actions align="center">
                                <q-btn class="q-ma-sm" color="red-6" @@click="deleteCustomer(props.row)" label="Yes"
                                    v-close-popup></q-btn>
                                <q-btn class="q-ma-sm" label="No" color="grey" v-close-popup />
                            </q-card-actions>
                        </q-card>
                    </q-dialog>
                </q-td>
                <q-td key="index" :props="props">{{ customers.indexOf(props.row) + 1 }}</q-td>
                <q-td key="firstName" :props="props">
          {{ props.row.firstName }}
          <q-popup-edit v-model="props.row.firstName">
            <q-input v-model="props.row.firstName" dense autofocus counter></q-input>
            <div class="justify-end row">
              <q-btn color="blue-grey-6" @@click="editProduct(props.row)" icon="edit" label="edit"
                v-close-popup="cancelEnabled">
              </q-btn>
            </div>
          </q-popup-edit>
        </q-td>
        <q-td key="lastName" :props="props">
          {{ props.row.lastName }}
          <q-popup-edit v-model="props.row.lastName">
            <q-input v-model="props.row.lastName" dense autofocus counter></q-input>
            <div class="justify-end row">
              <q-btn color="blue-grey-6" @@click="editProduct(props.row)" icon="edit" label="edit"
                v-close-popup="cancelEnabled">
              </q-btn>
            </div>
          </q-popup-edit>
        </q-td>
        <q-td key="age" :props="props">
          {{ props.row.age }}
          <q-popup-edit v-model="props.row.age">
            <q-input v-model="props.row.age" dense autofocus counter></q-input>
            <div class="justify-end row">
              <q-btn color="blue-grey-6" @@click="editProduct(props.row)" icon="edit" label="edit"
                v-close-popup="cancelEnabled">
              </q-btn>
            </div>
          </q-popup-edit>
        </q-td>
        <q-td key="birthday" :props="props">
          <q-input filled v-model="props.row.birthday" mask="date" style="width: 165px;">
            <template v-slot:append>
              <q-icon name="event" class="cursor-pointer">
                <q-popup-proxy cover transition-show="scale" transition-hide="scale">
                  <q-date v-model="props.row.birthday" landscape color="red">
                    <div class="row items-center justify-end">
                      <q-btn v-close-popup label="Change" color="red" flat @@click="editProduct(props.row)"></q-btn>
                      <q-btn v-close-popup label="Close" color="grey" flat></q-btn>
                    </div>
                  </q-date>
                </q-popup-proxy>
              </q-icon>
            </template>
          </q-input>
        </q-td>
        <q-td key="email" :props="props">
          {{ props.row.email }}
          <q-popup-edit v-model="props.row.email">
            <q-input v-model="props.row.email" dense autofocus counter></q-input>
            <div class="justify-end row">
              <q-btn color="blue-grey-6" @@click="editProduct(props.row)" icon="edit" label="edit"
                v-close-popup="cancelEnabled">
              </q-btn>
            </div>
          </q-popup-edit>
        </q-td>
        <q-td key="vacationMode" :props="props">
          {{ props.row.vacationMode }}
          <q-popup-edit v-model="props.row.vacationMode">
            <q-input v-model="props.row.vacationMode" dense autofocus counter></q-input>
            <div class="justify-end row">
              <q-btn color="blue-grey-6" @@click="editProduct(props.row)" icon="edit" label="edit"
                v-close-popup="cancelEnabled">
              </q-btn>
            </div>
          </q-popup-edit>
        </q-td>
        <q-td key="emailSubscription" :props="props">
          {{ props.row.emailSubscription }}
          <q-popup-edit v-model="props.row.emailSubscription">
            <q-input v-model="props.row.emailSubscription" dense autofocus counter></q-input>
            <div class="justify-end row">
              <q-btn color="blue-grey-6" @@click="editProduct(props.row)" icon="edit" label="edit"
                v-close-popup="cancelEnabled">
              </q-btn>
            </div>
          </q-popup-edit>
        </q-td>
        <q-td key="defaultAddress" :props="props">
          {{ props.row.defaultAddress }}
          <q-popup-edit v-model="props.row.defaultAddress">
            <q-input v-model="props.row.defaultAddress" dense autofocus counter></q-input>
            <div class="justify-end row">
              <q-btn color="blue-grey-6" @@click="editProduct(props.row)" icon="edit" label="edit"
                v-close-popup="cancelEnabled">
              </q-btn>
            </div>
          </q-popup-edit>
        </q-td>
        <q-td key="sellerName" :props="props">
          {{
          props.row.customerAddresses &&
          props.row.customerAddresses.length > 0 &&
          props.row.customerAddresses[0].address &&
          props.row.customerAddresses[0].address.sellerName !== null
          ? props.row.customerAddresses[0].address.sellerName
          : 'N/A'
          }}
          <q-popup-edit v-model="props.row.customerAddresses[0].address.sellerName">
            <q-input v-model="props.row.customerAddresses[0].address.sellerName" dense autofocus counter></q-input>
            <div class="justify-end row">
              <q-btn color="blue-grey-6" @@click="editProduct(props.row)" icon="edit" label="edit"
                v-close-popup="cancelEnabled">
              </q-btn>
            </div>
          </q-popup-edit>
        </q-td>
        <q-td key="sellerTelNumber" :props="props">
          {{
          props.row.customerAddresses &&
          props.row.customerAddresses.length > 0 &&
          props.row.customerAddresses[0].address &&
          props.row.customerAddresses[0].address.sellerTelNumber !== null
          ? props.row.customerAddresses[0].address.sellerTelNumber
          : 'N/A'
          }}
          <q-popup-edit v-model="props.row.customerAddresses[0].address.sellerTelNumber">
            <q-input v-model="props.row.customerAddresses[0].address.sellerTelNumber" dense autofocus counter></q-input>
            <div class="justify-end row">
              <q-btn color="blue-grey-6" @@click="editProduct(props.row)" icon="edit" label="edit"
                v-close-popup="cancelEnabled">
              </q-btn>
            </div>
          </q-popup-edit>
        </q-td>
        <q-td key="province" :props="props">
          {{
          props.row.customerAddresses &&
          props.row.customerAddresses.length > 0 &&
          props.row.customerAddresses[0].address &&
          props.row.customerAddresses[0].address.province !== null
          ? props.row.customerAddresses[0].address.province
          : 'N/A'
          }}
          <q-popup-edit v-model="props.row.customerAddresses[0].address.province">
            <q-input v-model="props.row.customerAddresses[0].address.province" dense autofocus counter></q-input>
            <div class="justify-end row">
              <q-btn color="blue-grey-6" @@click="editProduct(props.row)" icon="edit" label="edit"
                v-close-popup="cancelEnabled">
              </q-btn>
            </div>
          </q-popup-edit>
        </q-td>
        <q-td key="city" :props="props">
          {{
          props.row.customerAddresses &&
          props.row.customerAddresses.length > 0 &&
          props.row.customerAddresses[0].address &&
          props.row.customerAddresses[0].address.city !== null
          ? props.row.customerAddresses[0].address.city
          : 'N/A'
          }}
          <q-popup-edit v-model="props.row.customerAddresses[0].address.city">
            <q-input v-model="props.row.customerAddresses[0].address.city" dense autofocus counter></q-input>
            <div class="justify-end row">
              <q-btn color="blue-grey-6" @@click="editProduct(props.row)" icon="edit" label="edit"
                v-close-popup="cancelEnabled">
              </q-btn>
            </div>
          </q-popup-edit>
        </q-td>
        <q-td key="village" :props="props">
          {{
          props.row.customerAddresses &&
          props.row.customerAddresses.length > 0 &&
          props.row.customerAddresses[0].address &&
          props.row.customerAddresses[0].address.village !== null
          ? props.row.customerAddresses[0].address.village
          : 'N/A'
          }}
          <q-popup-edit v-model="props.row.customerAddresses[0].address.village">
            <q-input v-model="props.row.customerAddresses[0].address.village" dense autofocus counter></q-input>
            <div class="justify-end row">
              <q-btn color="blue-grey-6" @@click="editProduct(props.row)" icon="edit" label="edit"
                v-close-popup="cancelEnabled">
              </q-btn>
            </div>
          </q-popup-edit>
        </q-td>
        <q-td key="addressDetail" :props="props">
          {{
          props.row.customerAddresses &&
          props.row.customerAddresses.length > 0 &&
          props.row.customerAddresses[0].address &&
          props.row.customerAddresses[0].address.addressDetail !== null
          ? props.row.customerAddresses[0].address.addressDetail
          : 'N/A'
          }}
          <q-popup-edit v-model="props.row.customerAddresses[0].address.addressDetail">
            <q-input v-model="props.row.customerAddresses[0].address.addressDetail" dense autofocus counter></q-input>
            <div class="justify-end row">
              <q-btn color="blue-grey-6" @@click="editProduct(props.row)" icon="edit" label="edit"
                v-close-popup="cancelEnabled">
              </q-btn>
            </div>
          </q-popup-edit>
        </q-td>
        <q-td key="postCode" :props="props">
          {{
          props.row.customerAddresses &&
          props.row.customerAddresses.length > 0 &&
          props.row.customerAddresses[0].address &&
          props.row.customerAddresses[0].address.postCode !== null
          ? props.row.customerAddresses[0].address.postCode
          : 'N/A'
          }}
          <q-popup-edit v-model="props.row.customerAddresses[0].address.postCode">
            <q-input v-model="props.row.customerAddresses[0].address.postCode" dense autofocus counter></q-input>
            <div class="justify-end row">
              <q-btn color="blue-grey-6" @@click="editProduct(props.row)" icon="edit" label="edit"
                v-close-popup="cancelEnabled">
              </q-btn>
            </div>
          </q-popup-edit>
        </q-td>
        <q-td key="bankName" :props="props">
          {{
          props.row.customerBankAccounts &&
          props.row.customerBankAccounts.length > 0 &&
          props.row.customerBankAccounts[0].bank &&
          props.row.customerBankAccounts[0].bank.bankName !== null
          ? props.row.customerBankAccounts[0].bank.bankName
          : 'N/A'
          }}
          <q-popup-edit v-model="props.row.customerBankAccounts[0].bank.bankName">
            <q-input v-model="props.row.customerBankAccounts[0].bank.bankName" dense autofocus counter></q-input>
            <div class="justify-end row">
              <q-btn color="blue-grey-6" @@click="editProduct(props.row)" icon="edit" label="edit"
                v-close-popup="cancelEnabled">
              </q-btn>
            </div>
          </q-popup-edit>
        </q-td>
        <q-td key="accountName" :props="props">
          {{
          props.row.customerBankAccounts &&
          props.row.customerBankAccounts.length > 0 &&
          props.row.customerBankAccounts[0].accountName &&
          props.row.customerBankAccounts[0].accountName !== null
          ? props.row.customerBankAccounts[0].accountName
          : 'N/A'
          }}
          <q-popup-edit v-model="props.row.customerBankAccounts[0].accountName">
            <q-input v-model="props.row.customerBankAccounts[0].accountName" dense autofocus counter></q-input>
            <div class="justify-end row">
              <q-btn color="blue-grey-6" @@click="editProduct(props.row)" icon="edit" label="edit"
                v-close-popup="cancelEnabled">
              </q-btn>
            </div>
          </q-popup-edit>
        </q-td>
        <q-td key="accountNumber" :props="props">
          {{
          props.row.customerBankAccounts &&
          props.row.customerBankAccounts.length > 0 &&
          props.row.customerBankAccounts[0].accountNumber &&
          props.row.customerBankAccounts[0].accountNumber !== null
          ? props.row.customerBankAccounts[0].accountNumber
          : 'N/A'
          }}
          <q-popup-edit v-model="props.row.customerBankAccounts[0].accountNumber">
            <q-input v-model="props.row.customerBankAccounts[0].accountNumber" dense autofocus counter></q-input>
            <div class="justify-end row">
              <q-btn color="blue-grey-6" @@click="editProduct(props.row)" icon="edit" label="edit"
                v-close-popup="cancelEnabled">
              </q-btn>
            </div>
          </q-popup-edit>
        </q-td>
        <q-td key="accountQr" :props="props">
          {{
          props.row.customerBankAccounts &&
          props.row.customerBankAccounts.length > 0 &&
          props.row.customerBankAccounts[0].accountQr &&
          props.row.customerBankAccounts[0].accountQr !== null
          ? props.row.customerBankAccounts[0].accountQr
          : 'N/A'
          }}
          <q-popup-edit v-model="props.row.customerBankAccounts[0].accountQr">
            <q-input v-model="props.row.customerBankAccounts[0].accountQr" dense autofocus counter></q-input>
            <div class="justify-end row">
              <q-btn color="blue-grey-6" @@click="editProduct(props.row)" icon="edit" label="edit"
                v-close-popup="cancelEnabled">
              </q-btn>
            </div>
          </q-popup-edit>
        </q-td>
            </q-tr>
        </template>
    </q-table>

    <div class="bg-grey-9 q-pa-sm" style="border-bottom-left-radius: 10px; border-bottom-right-radius: 10px;"></div>




    <q-btn class="q-my-md q-py-md float-right" style="margin-bottom: 50px;" color="green" icon="add_box"
        label="Add Product" size="md" onclick='window.location="/Customer/AddCus"'></q-btn>

</div>

@section code {
    <script>
        var option = {
            //data
            data() {
                return {
                    confirm: false,
                    searchText: "",
                    customers: []
                    ,
                    columns: [
                        {
                            name: 'actions',
                            label: 'Actions',
                            field: 'actions',
                            align: 'center'
                        },
                        {
                            name: 'index',
                            field: 'index',
                            align: 'left',
                            sortable: true,
                            label: 'No'
                        },
                        {
                            name: 'firstName',
                            label: 'First Name',
                            field: 'firstName',
                            sortable: true,
                            align: 'center',
                        },
                        {
                            name: 'lastName',
                            label: 'Last Name',
                            field: 'lastName',
                            sortable: true,
                            align: 'center',
                        },
                        {
                            name: 'age',
                            label: 'Age',
                            field: 'age',
                            sortable: true,
                            align: 'center',
                        },
                        {
                            name: 'birthday',
                            label: 'Birthday',
                            field: 'birthday',
                            sortable: true,
                            align: 'center',
                        },
                        {
                            name: 'email',
                            label: 'Email',
                            field: 'email',
                            sortable: true,
                            align: 'center',
                        },
                        {
                            name: 'vacationMode',
                            label: 'Vacation Mode',
                            field: 'vacationMode',
                            sortable: true,
                            align: 'center',
                        },
                        {
                            name: 'emailSubscription',
                            label: 'Email Subscription',
                            field: 'emailSubscription',
                            sortable: true,
                            align: 'center',
                        },
                        {
                            name: 'defaultAddress',
                            label: 'Default Address',
                            field: 'defaultAddress',
                            sortable: true,
                            align: 'center',
                        },
                        {
                            name: 'sellerName',
                            label: 'Seller Name',
                            field: 'customerAddresses[0].address.sellerName',
                            sortable: true,
                            align: 'center',
                        },
                        {
                            name: 'sellerTelNumber',
                            label: 'Seller Tel Number',
                            field: 'customerAddresses[0].address.sellerTelNumber',
                            sortable: true,
                            align: 'center',
                        },
                        {
                            name: 'province',
                            label: 'Province',
                            field: 'customerAddresses[0].address.province',
                            sortable: true,
                            align: 'center',
                        },
                        {
                            name: 'city',
                            label: 'City',
                            field: 'customerAddresses[0].address.city',
                            sortable: true,
                            align: 'center',
                        },
                        {
                            name: 'village',
                            label: 'Village',
                            field: 'customerAddresses[0].address.village',
                            sortable: true,
                            align: 'center',
                        },
                        {
                            name: 'addressDetail',
                            label: 'Address Detail',
                            field: 'customerAddresses[0].address.addressDetail',
                            sortable: true,
                            align: 'center',
                        },
                        {
                            name: 'postCode',
                            label: 'Post Code',
                            field: 'customerAddresses[0].address.postCode',
                            sortable: true,
                            align: 'center',
                        },
                        {
                            name: 'bankName',
                            label: 'Bank Name',
                            field: 'customerBankAccounts[0].bank.bankName',
                            sortable: true,
                            align: 'center',
                        },
                        {
                            name: 'accountName',
                            label: 'Account Name',
                            field: 'customerBankAccounts[0].accountName',
                            sortable: true,
                            align: 'center',
                        },
                        {
                            name: 'accountNumber',
                            label: 'Account Number',
                            field: 'customerBankAccounts[0].accountNumber',
                            sortable: true,
                            align: 'center',
                        },
                        {
                            name: 'accountQr',
                            label: 'Account QR',
                            field: 'customerBankAccounts[0].accountQr',
                            sortable: true,
                            align: 'center',
                        }
]
                        };
            }
            ,
            //methods
            methods: {
                async editCustomer(item) {

                    var url = "api/EditCustomer";
                    try {
                        console.log(item);
                        var result = await axios.post(url, item);
                        console.log(result.data);
                    }
                    catch (error) {
                        console.log(error);
                    }

                }//ef
            }//emethod
            ,
            //computed
            computed: {

            }
            ,
            //created
            async created() {
                try {
                    var response = await axios.get("/api/GetCustomers");
                    this.customers = response.data;
                    console.log(response.data);
                }
                catch (error) {
                    console.log(error);
                }


            }//ecreated
            ,
            //mounted
            mounted() {

            }

        };

        const app = Vue.createApp(option);
        app.use(Quasar)
        app.mount('#app1')
    </script>
}